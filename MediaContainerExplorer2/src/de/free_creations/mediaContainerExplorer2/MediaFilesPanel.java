/*
 * Copyright 2012 harald.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.free_creations.mediaContainerExplorer2;

import java.io.File;
import javax.swing.JFileChooser;
import org.openide.util.NbPreferences;

final class MediaFilesPanel extends javax.swing.JPanel {

  private final MediaFilesOptionsPanelController controller;
  final JFileChooser fileChooser = new JFileChooser();

  MediaFilesPanel(MediaFilesOptionsPanelController controller) {
    this.controller = controller;
    initComponents();
    // TODO listen to changes in form fields and call controller.changed()
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    mediaFolderPath = new javax.swing.JTextField();
    btnSelect = new javax.swing.JButton();

    mediaFolderPath.setText(org.openide.util.NbBundle.getMessage(MediaFilesPanel.class, "MediaFilesPanel.mediaFolderPath.text")); // NOI18N

    org.openide.awt.Mnemonics.setLocalizedText(btnSelect, org.openide.util.NbBundle.getMessage(MediaFilesPanel.class, "MediaFilesPanel.btnSelect.text")); // NOI18N
    btnSelect.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSelectActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(mediaFolderPath, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(mediaFolderPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnSelect))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
    fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int returnVal = fileChooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
      File file = fileChooser.getSelectedFile();
      mediaFolderPath.setText(file.getPath());
    }
  }//GEN-LAST:event_btnSelectActionPerformed

  void load() {
    // TODO read settings and initialize GUI
    // Example:        
    // someCheckBox.setSelected(Preferences.userNodeForPackage(MediaFilesPanel.class).getBoolean("someFlag", false));
    // or for org.openide.util with API spec. version >= 7.4:
    // someCheckBox.setSelected(NbPreferences.forModule(MediaFilesPanel.class).getBoolean("someFlag", false));
    // or:
    // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
    String storedMediaFolderPath = NbPreferences.forModule(MediaContainerExplorerTopComponent.class).
                     get(MediaContainerExplorerTopComponent.PREF_MEDIAFOLDER, 
                     System.getProperty("user.home") + "/RepetitorMedia");
    this.mediaFolderPath.setText(storedMediaFolderPath);
    
  }

  void store() {
    // TODO store modified settings
    // Example:
    // Preferences.userNodeForPackage(MediaFilesPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
    // or for org.openide.util with API spec. version >= 7.4:
    // NbPreferences.forModule(MediaFilesPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
    // or:
    // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
    NbPreferences.forModule(MediaContainerExplorerTopComponent.class).
            put(MediaContainerExplorerTopComponent.PREF_MEDIAFOLDER, mediaFolderPath.getText());
    
  }

  boolean valid() {
    File candidate = new File(mediaFolderPath.getText());
    if (!candidate.exists()) {
      return false;
    }
    if (!candidate.isDirectory()) {
      return false;
    }
    return true;
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnSelect;
  private javax.swing.JTextField mediaFolderPath;
  // End of variables declaration//GEN-END:variables
}
